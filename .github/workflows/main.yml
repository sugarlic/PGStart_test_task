name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Set up Go 1.21
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test
        run: go test -v ./...

  build_and_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    # needs: test

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Setup PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Create database table
        run: |
          PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }} psql -h localhost -U postgres -d postgres -c "
          CREATE TABLE IF NOT EXISTS commands (
            id SERIAL PRIMARY KEY,
            title TEXT,
            content TEXT,
            exec_res TEXT
          );"

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpa63e0skdhtni87735
          CR_REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --build-arg "DATABASE_URL=host=localhost port=5432 user=postgres password=${{ secrets.POSTGRES_PASSWORD }} dbname=postgres sslmode=disable" -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2
        env:
          CR_REGISTRY: crpa63e0skdhtni87735
          CR_REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: yc-action-demo
          vm-service-account-id: ajeqnasj95o7********
          vm-cores: 2
          vm-memory: 2Gb
          vm-core-fraction: 100
          vm-subnet-id: e9b*********
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.yaml'