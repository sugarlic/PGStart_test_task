name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CR_REGISTRY: crpa63e0skdhtni87735
  CR_REPOSITORY: backend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Set up Go 1.21
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Test
        run: go test -v ./...

  build_and_deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    # needs: test

    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      # - name: Login to Yandex Cloud Container Registry
      #   id: login-cr
      #   uses: yc-actions/yc-cr-login@v1
      #   with:
      #     yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      # - name: Build, tag, and push image to Yandex Cloud Container Registry
      #   run: |
      #     docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
      #     docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      # - name: Deploy COI VM
      #   id: deploy-coi
      #   uses: yc-actions/yc-coi-deploy@v2
      #   env:
      #     CR_REGISTRY: crpa63e0skdhtni87735
      #     CR_REPOSITORY: backend
      #     IMAGE_TAG: ${{ github.sha }}
      #   with:
      #     yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      #     folder-id: ${{ secrets.YC_FOLDER_ID }}
      #     vm-name: testvm
      #     vm-service-account-id: epdtc6j2rh93lrt4vqom
      #     vm-cores: 2
      #     vm-memory: 2Gb
      #     vm-core-fraction: 100
      #     vm-subnet-id: e2lmf84lhk5tekk3cqq1
      #     user-data-path: './user-data.yaml'
      #     docker-compose-path: './docker-compose.yaml'

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy docker-compose.yaml to server
        run: |
          scp -o "StrictHostKeyChecking=no" ./docker-compose.yaml yc-sa-pgstart@${{ secrets.VM_IP }}:/home/yc-sa-pgstart

      - name: Deploy to server
        run: |
          ssh -o "StrictHostKeyChecking=no" yc-sa-pgstart@${{ secrets.VM_IP }} "\
          sudo docker login --username oauth --password-stdin cr.yandex <<< ${{ secrets.OAUTH_TOKEN }}; \
          IMAGES=\$(sudo docker images -q); \
          if [ ! -z \"\$IMAGES\" ]; then \
            sudo docker rmi -f \$IMAGES; \
          fi; \
          echo "Pulling image"; \
          sudo docker pull cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG"; \
          echo "docker-compose up"; \
          sudo docker-compose down
          # LATEST_TAG=$(sudo docker images cr.yandex/crpa63e0skdhtni87735/backend --format "{{.Tag}} {{.CreatedAt}}" | sort -r | head -n 1 | awk '{print $1}'); \
          # sudo IMAGE_TAG=$LATEST_TAG docker-compose up -d


